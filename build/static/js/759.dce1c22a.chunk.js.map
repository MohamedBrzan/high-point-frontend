{"version":3,"file":"static/js/759.dce1c22a.chunk.js","mappings":"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","sources":["pages/ContactUs/helpers/EditContactUsForm.js","pages/ContactUs/helpers/CreateContactUsForm.js","pages/ContactUs/ContactUs.js"],"sourcesContent":["import { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n  Modal,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  useGetAllContactUsQuery,\r\n  useUpdateContactUsMutation,\r\n} from '../../../store/apis/ContactUs/ContactUs';\r\nimport { createContactUs } from '../../../store/reducers/ContactUs/ContactUs';\r\nimport { createPartner } from '../../../store/reducers/Partner/PartnerSlice';\r\nimport CustomSpinner from '../../../utils/CustomSpinner/CustomSpinner';\r\n\r\nconst EditContactUsForm = ({ contactUs, refetchContactUs }) => {\r\n  const { t } = useTranslation();\r\n  const { data: allContactUs, isSuccess, refetch } = useGetAllContactUsQuery();\r\n\r\n  const [updateContactUs, { isLoading, data }] = useUpdateContactUsMutation();\r\n\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const { partner } = useSelector((state) => state.partner);\r\n\r\n  const [firstText, setFirstText] = useState('');\r\n  const [firstTextAr, setFirstTextAr] = useState('');\r\n  const [lastText, setLastText] = useState('');\r\n  const [lastTextAr, setLastTextAr] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [locationAr, setLocationAr] = useState('');\r\n  const [branches, setBranches] = useState('');\r\n  const [branchesAr, setBranchesAr] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [addressAr, setAddressAr] = useState('');\r\n  const [question, setQuestion] = useState('');\r\n  const [questionAr, setQuestionAr] = useState('');\r\n  const [companyEmail, setCompanyEmail] = useState('');\r\n  const [tel, setTel] = useState('');\r\n  const [fax, setFax] = useState('');\r\n\r\n  const changeValue = (e) => e.target.value;\r\n\r\n  const editContactUs = async (e) => {\r\n    try {\r\n      const data = {\r\n        first_text: firstText,\r\n        last_text: lastText,\r\n        first_text_ar: firstTextAr,\r\n        last_text_ar: lastTextAr,\r\n        location: location,\r\n        location_ar: locationAr,\r\n        branches,\r\n        branches_ar: branchesAr,\r\n        address: address,\r\n        address_ar: addressAr,\r\n        question: question,\r\n        question_ar: questionAr,\r\n        company_email: companyEmail,\r\n        tel,\r\n        fax,\r\n      };\r\n      e.preventDefault();\r\n      await updateContactUs({ contact_us_id: contactUs._id, ...data }).then(\r\n        (response) => {\r\n          if (response.data) {\r\n            dispatch(createContactUs(data));\r\n            toast.success(t('update_success'), {\r\n              position: 'top-center',\r\n            });\r\n            handleClose();\r\n            refetchContactUs();\r\n          } else {\r\n            toast.error(response.error.data.message, {\r\n              position: 'top-center',\r\n            });\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      toast.error(error.message, {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFirstText(contactUs.title.first_text);\r\n    setFirstTextAr(contactUs.title_ar.first_text_ar);\r\n    setLastText(contactUs.title.last_text);\r\n    setLastTextAr(contactUs.title_ar.last_text_ar);\r\n    setLocation(contactUs.head_office.location);\r\n    setLocationAr(contactUs.head_office.location_ar);\r\n    setAddress(contactUs.head_office.address);\r\n    setAddressAr(contactUs.head_office.address_ar);\r\n    setBranches(contactUs.branches);\r\n    setBranchesAr(contactUs.branches_ar);\r\n    setQuestion(contactUs.work_inquiries.question);\r\n    setQuestionAr(contactUs.work_inquiries.question_ar);\r\n    setCompanyEmail(contactUs.work_inquiries.company_email);\r\n    setTel(contactUs.phone.tel);\r\n    setFax(contactUs.phone.fax);\r\n  }, [\r\n    contactUs.branches,\r\n    contactUs.branches_ar,\r\n    contactUs.head_office.address,\r\n    contactUs.head_office.address_ar,\r\n    contactUs.head_office.location,\r\n    contactUs.head_office.location_ar,\r\n    contactUs.phone.fax,\r\n    contactUs.phone.tel,\r\n    contactUs.title.first_text,\r\n    contactUs.title.last_text,\r\n    contactUs.title_ar.first_text_ar,\r\n    contactUs.title_ar.last_text_ar,\r\n    contactUs.work_inquiries.company_email,\r\n    contactUs.work_inquiries.question,\r\n    contactUs.work_inquiries.question_ar,\r\n  ]);\r\n\r\n  if (isLoading) return <CustomSpinner />;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        md={6}\r\n        className='edit_btn'\r\n        onClick={() => {\r\n          dispatch(createPartner(contactUs));\r\n          handleShow();\r\n        }}\r\n        title={t('hpt_page.card.title', {\r\n          en: `Edit ${contactUs.title.first_text} ${contactUs.title.last_text}`,\r\n          ar: `تعديل ${contactUs.title_ar.first_text_ar}${contactUs.title_ar.last_text_ar}`,\r\n        })}\r\n      >\r\n        <FontAwesomeIcon icon={faEdit} size='1x' />\r\n      </div>\r\n\r\n      <Modal\r\n        show={show}\r\n        size='xl'\r\n        onHide={handleClose}\r\n        backdrop='static'\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {t('hpt_page.title.first_text', {\r\n              en: `${contactUs.title.first_text} ${contactUs.title.last_text}`,\r\n              ar: `${contactUs.title_ar.first_text_ar}${contactUs.title_ar.last_text_ar}`,\r\n            })}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => editContactUs(e)}>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.title_text')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={firstText}\r\n                    onChange={(e) => setFirstText(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.title_text')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={firstTextAr}\r\n                    onChange={(e) => setFirstTextAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('hpt_page.title.last_text', {\r\n                      en: 'Last Text',\r\n                      ar: 'النص الأخير',\r\n                    })}{' '}\r\n                    ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={lastText}\r\n                    onChange={(e) => setLastText(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('hpt_page.title.last_text', {\r\n                      en: 'Last Text',\r\n                      ar: 'النص الأخير',\r\n                    })}{' '}\r\n                    ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={lastTextAr}\r\n                    onChange={(e) => setLastTextAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.location')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={location}\r\n                    onChange={(e) => setLocation(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.location')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={locationAr}\r\n                    onChange={(e) => setLocationAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.address')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={address}\r\n                    onChange={(e) => setAddress(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.address')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={addressAr}\r\n                    onChange={(e) => setAddressAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.branches')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={branches}\r\n                    onChange={(e) => setBranches(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.branches')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={branchesAr}\r\n                    onChange={(e) => setBranchesAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.question')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={question}\r\n                    onChange={(e) => setQuestion(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.question')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={questionAr}\r\n                    onChange={(e) => setQuestionAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.tel')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    type='number'\r\n                    disabled={isLoading}\r\n                    value={tel}\r\n                    onChange={(e) => setTel(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.fax')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    type='number'\r\n                    disabled={isLoading}\r\n                    value={fax}\r\n                    onChange={(e) => setFax(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.company_email')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    type='email'\r\n                    disabled={isLoading}\r\n                    value={companyEmail}\r\n                    onChange={(e) => setCompanyEmail(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Button disabled={isLoading} type='submit'>\r\n              {t('save_btn')}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditContactUsForm;\r\n","import { faCirclePlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n  Modal,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { useCreateContactUsMutation } from '../../../store/apis/ContactUs/ContactUs';\r\nimport CustomSpinner from '../../../utils/CustomSpinner/CustomSpinner';\r\n\r\nconst CreateContactUsForm = ({ refetch }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [makeNewContactUs, { isLoading }] = useCreateContactUsMutation();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [firstText, setFirstText] = useState('');\r\n  const [firstTextAr, setFirstTextAr] = useState('');\r\n  const [lastText, setLastText] = useState('');\r\n  const [lastTextAr, setLastTextAr] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [locationAr, setLocationAr] = useState('');\r\n  const [branches, setBranches] = useState('');\r\n  const [branchesAr, setBranchesAr] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [addressAr, setAddressAr] = useState('');\r\n  const [question, setQuestion] = useState('');\r\n  const [questionAr, setQuestionAr] = useState('');\r\n  const [companyEmail, setCompanyEmail] = useState('');\r\n  const [tel, setTel] = useState('');\r\n  const [fax, setFax] = useState('');\r\n\r\n  const changeValue = (e) => e.target.value;\r\n\r\n  const createContactUs = async (e) => {\r\n    try {\r\n      const data = {\r\n        first_text: firstText,\r\n        last_text: lastText,\r\n        first_text_ar: firstTextAr,\r\n        last_text_ar: lastTextAr,\r\n        location: location,\r\n        location_ar: locationAr,\r\n        branches,\r\n        branches_ar: branchesAr,\r\n        address: address,\r\n        address_ar: addressAr,\r\n        question: question,\r\n        question_ar: questionAr,\r\n        company_email: companyEmail,\r\n        tel,\r\n        fax,\r\n      };\r\n      e.preventDefault();\r\n      await makeNewContactUs({ ...data }).then((response) => {\r\n        if (response.data) {\r\n          toast.success(t('update_success'), {\r\n            position: 'top-center',\r\n          });\r\n          handleClose();\r\n          refetch();\r\n        } else {\r\n          toast.error(response.error.data.message, {\r\n            position: 'top-center',\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      toast.error(error.message, {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <CustomSpinner />;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        md={6}\r\n        className='create_btn'\r\n        onClick={() => {\r\n          handleShow();\r\n        }}\r\n        title={t('hpt_page.card.title', {\r\n          en: `Create a new Contact Us`,\r\n          ar: 'إنشاء التواصل',\r\n        })}\r\n      >\r\n        <FontAwesomeIcon icon={faCirclePlus} size='1x' />\r\n      </div>\r\n\r\n      <Modal\r\n        show={show}\r\n        size='xl'\r\n        onHide={handleClose}\r\n        backdrop='static'\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {t('hpt_page.title.first_text', {\r\n              en: 'Create a new Contact Us',\r\n              ar: 'إنشاء التواصل',\r\n            })}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => createContactUs(e)}>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.title_text')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={firstText}\r\n                    onChange={(e) => setFirstText(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.title_text')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={firstTextAr}\r\n                    onChange={(e) => setFirstTextAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('hpt_page.title.last_text', {\r\n                      en: 'Last Text',\r\n                      ar: 'النص الأخير',\r\n                    })}{' '}\r\n                    ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={lastText}\r\n                    onChange={(e) => setLastText(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('hpt_page.title.last_text', {\r\n                      en: 'Last Text',\r\n                      ar: 'النص الأخير',\r\n                    })}{' '}\r\n                    ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={lastTextAr}\r\n                    onChange={(e) => setLastTextAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.location')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={location}\r\n                    onChange={(e) => setLocation(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.location')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={locationAr}\r\n                    onChange={(e) => setLocationAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.address')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={address}\r\n                    onChange={(e) => setAddress(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.address')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={addressAr}\r\n                    onChange={(e) => setAddressAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.branches')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={branches}\r\n                    onChange={(e) => setBranches(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.branches')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={branchesAr}\r\n                    onChange={(e) => setBranchesAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.question')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={question}\r\n                    onChange={(e) => setQuestion(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.question')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    value={questionAr}\r\n                    onChange={(e) => setQuestionAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.tel')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    type='number'\r\n                    disabled={isLoading}\r\n                    value={tel}\r\n                    onChange={(e) => setTel(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.fax')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    type='number'\r\n                    disabled={isLoading}\r\n                    value={fax}\r\n                    onChange={(e) => setFax(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.company_email')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    type='email'\r\n                    disabled={isLoading}\r\n                    value={companyEmail}\r\n                    onChange={(e) => setCompanyEmail(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Button disabled={isLoading} type='submit'>\r\n              {t('save_btn')}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateContactUsForm;\r\n","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CustomSpinner from '../../utils/CustomSpinner/CustomSpinner';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormGroup from 'react-bootstrap/FormGroup';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport {\r\n  useGetAllContactUsQuery,\r\n  useGetContactUsByIdQuery,\r\n} from '../../store/apis/ContactUs/ContactUs';\r\nimport './ContactUs.css';\r\nimport EditContactUsForm from './helpers/EditContactUsForm';\r\nimport CreateContactUsForm from './helpers/CreateContactUsForm';\r\nimport { toast } from 'react-toastify';\r\nimport { useCreateClientMessageMutation } from '../../store/apis/ClientMessage/ClientMessage';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PageTitle from '../../utils/PageTitle';\r\n\r\nconst ContactUs = () => {\r\n  const { t } = useTranslation();\r\n  const { user } = useSelector((state) => state.user);\r\n  const isAdmin = user && user.isAdmin && user.isAdmin === true;\r\n  const { data: allContactUs, isLoading, refetch } = useGetAllContactUsQuery();\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phoneOrWhatsApp, setPhoneOrWhatsApp] = useState('');\r\n  const [company, setCompany] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [numberOfNetwork, setNumberOfNetwork] = useState('');\r\n  const [networkTraffic, setNetworkTraffic] = useState('');\r\n  const [networkType, setNetworkType] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const changeValue = (e) => e.target.value;\r\n\r\n  const { data: contactUs, refetch: refetchContactUs } =\r\n    useGetContactUsByIdQuery(\r\n      allContactUs && allContactUs[0] && allContactUs[0]._id\r\n        ? allContactUs[0]._id\r\n        : ''\r\n    );\r\n  const [createMessage, { isLoading: uploadingMessage }] =\r\n    useCreateClientMessageMutation();\r\n\r\n  const data = {\r\n    name,\r\n    email,\r\n    phone_or_whatsapp: phoneOrWhatsApp,\r\n    company,\r\n    country,\r\n    number_of_network: numberOfNetwork,\r\n    network_traffic: networkTraffic,\r\n    network_type: networkType,\r\n    message,\r\n  };\r\n\r\n  const SendMessage = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      await createMessage({ ...data }).then((response) => {\r\n        if (response.data) {\r\n          toast.success(t('create_success'), {\r\n            position: 'top-center',\r\n          });\r\n          setName('');\r\n          setEmail('');\r\n          setPhoneOrWhatsApp('');\r\n          setCompany('');\r\n          setCountry('');\r\n          setNumberOfNetwork('');\r\n          setNetworkTraffic('');\r\n          setNetworkType('');\r\n          setMessage('');\r\n        } else {\r\n          toast.error(response.error.data.message, {\r\n            position: 'top-center',\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      toast.error(error.message, {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading || uploadingMessage) return <CustomSpinner />;\r\n\r\n  return (\r\n    <section className='contact_us'>\r\n      {' '}\r\n      <PageTitle>Contact Us</PageTitle>\r\n      {isAdmin ? (\r\n        contactUs && contactUs._id ? (\r\n          <EditContactUsForm\r\n            contactUs={contactUs}\r\n            refetchContactUs={refetchContactUs}\r\n          />\r\n        ) : (\r\n          <CreateContactUsForm refetch={refetch} />\r\n        )\r\n      ) : null}\r\n      <Container>\r\n        <Row className='contact_us__row'>\r\n          {contactUs && contactUs._id && (\r\n            <Col md={6} className='contact_us__title'>\r\n              {t('hpt_page.contact_us_page.info', {\r\n                en: contactUs.title.first_text,\r\n                ar: contactUs.title_ar.first_text_ar,\r\n              })}{' '}\r\n              <br />\r\n              {t('hpt_page.contact_us_page.info', {\r\n                en: contactUs.title.last_text,\r\n                ar: contactUs.title_ar.last_text_ar,\r\n              })}\r\n            </Col>\r\n          )}\r\n          <Col>\r\n            <Form onSubmit={(e) => SendMessage(e)}>\r\n              <FormGroup>\r\n                <FormLabel className='contact_us__form-label'>\r\n                  {t('hpt_page.contact_us_page.name')}\r\n                </FormLabel>\r\n                <FormControl\r\n                  type='text'\r\n                  value={name}\r\n                  onChange={(e) => setName(changeValue(e))}\r\n                  className='contact_us__form-control'\r\n                  required\r\n                  disabled={isLoading}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-3'>\r\n                <FormLabel className='contact_us__form-label'>\r\n                  {t('hpt_page.contact_us_page.email')}\r\n                </FormLabel>\r\n                <FormControl\r\n                  type='email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(changeValue(e))}\r\n                  className='contact_us__form-control'\r\n                  required\r\n                  disabled={isLoading}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-3'>\r\n                <FormLabel className='contact_us__form-label'>\r\n                  {t('hpt_page.contact_us_page.phone_or_whats_app')}\r\n                </FormLabel>\r\n                <FormControl\r\n                  type='number'\r\n                  value={phoneOrWhatsApp}\r\n                  onChange={(e) => setPhoneOrWhatsApp(changeValue(e))}\r\n                  className='contact_us__form-control'\r\n                  required\r\n                  disabled={isLoading}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-3'>\r\n                <FormLabel className='contact_us__form-label'>\r\n                  {t('hpt_page.contact_us_page.company')}\r\n                </FormLabel>\r\n                <FormControl\r\n                  type='text'\r\n                  value={company}\r\n                  onChange={(e) => setCompany(changeValue(e))}\r\n                  className='contact_us__form-control'\r\n                  required\r\n                  disabled={isLoading}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-3'>\r\n                <FormLabel className='contact_us__form-label'>\r\n                  {t('hpt_page.contact_us_page.country')}\r\n                </FormLabel>\r\n                <FormControl\r\n                  type='text'\r\n                  value={country}\r\n                  onChange={(e) => setCountry(changeValue(e))}\r\n                  className='contact_us__form-control'\r\n                  required\r\n                  disabled={isLoading}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup className='mb-3'>\r\n                <FormLabel className='contact_us__form-label'>\r\n                  {t('hpt_page.contact_us_page.number_of_network')}\r\n                </FormLabel>\r\n                <FormControl\r\n                  type='number'\r\n                  value={numberOfNetwork}\r\n                  onChange={(e) => setNumberOfNetwork(changeValue(e))}\r\n                  className='contact_us__form-control'\r\n                  required\r\n                  disabled={isLoading}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-3'>\r\n                <FormLabel className='contact_us__form-label'>\r\n                  {t('hpt_page.contact_us_page.network_traffic')}\r\n                </FormLabel>\r\n                <FormControl\r\n                  type='text'\r\n                  value={networkTraffic}\r\n                  onChange={(e) => setNetworkTraffic(changeValue(e))}\r\n                  className='contact_us__form-control'\r\n                  required\r\n                  disabled={isLoading}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-3'>\r\n                <FormLabel className='contact_us__form-label'>\r\n                  {t('hpt_page.contact_us_page.network_type')}\r\n                </FormLabel>\r\n                <FormControl\r\n                  type='text'\r\n                  value={networkType}\r\n                  onChange={(e) => setNetworkType(changeValue(e))}\r\n                  className='contact_us__form-control'\r\n                  required\r\n                  disabled={isLoading}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-3'>\r\n                <FormControl\r\n                  as='textarea'\r\n                  value={message}\r\n                  onChange={(e) => setMessage(changeValue(e))}\r\n                  row='5'\r\n                  className='contact_us__form-control'\r\n                  required\r\n                  placeholder={t('hpt_page.contact_us_page.message')}\r\n                  disabled={isLoading}\r\n                />\r\n              </FormGroup>\r\n              <div className='contact_us__btn-container'>\r\n                <Button type='submit' className='contact_us__submit-btn'>\r\n                  {t('hpt_page.contact_us_page.send_message_btn')}\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n            {contactUs && contactUs._id && (\r\n              <Row className='contact_us__info-row'>\r\n                <Col md={6} className='contact_us__info-col'>\r\n                  <div className='head_office mb-3'>\r\n                    <div className='title'>\r\n                      {t('hpt_page.contact_us_page.head_office')}\r\n                    </div>\r\n                    <div>\r\n                      {t('hpt_page.contact_us_page.info', {\r\n                        en: contactUs.head_office.location,\r\n                        ar: contactUs.head_office.location_ar,\r\n                      })}\r\n                    </div>\r\n                    <div>\r\n                      {t('hpt_page.contact_us_page.info', {\r\n                        en: contactUs.head_office.address,\r\n                        ar: contactUs.head_office.address_ar,\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                  <div className='other_branches mb-3'>\r\n                    <div className='title'>\r\n                      {t('hpt_page.contact_us_page.other_branches')}\r\n                    </div>\r\n                    <div>\r\n                      {' '}\r\n                      {t('hpt_page.contact_us_page.info', {\r\n                        en: contactUs.branches,\r\n                        ar: contactUs.branches_ar,\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col md={6} className='contact_us__info-col'>\r\n                  <div className='work_inquiries mb-3'>\r\n                    <div className='title'>\r\n                      {t('hpt_page.contact_us_page.work_inquiries')}\r\n                    </div>\r\n                    <div>\r\n                      {t('hpt_page.contact_us_page.info', {\r\n                        en: `${contactUs.work_inquiries.question} ?`,\r\n                        ar: `${contactUs.work_inquiries.question_ar} ?`,\r\n                      })}\r\n                    </div>\r\n                    <div>{contactUs.work_inquiries.company_email} </div>\r\n                  </div>\r\n                  <div className='phone mb-3'>\r\n                    <div className='title'>\r\n                      {t('hpt_page.contact_us_page.phone')}\r\n                    </div>\r\n                    <div>\r\n                      <span> {t('hpt_page.contact_us_page.tel')} : </span>\r\n                      {contactUs.phone.tel}{' '}\r\n                    </div>\r\n                    <div>\r\n                      {' '}\r\n                      <span> {t('hpt_page.contact_us_page.fax')} : </span>\r\n                      {contactUs.phone.fax}{' '}\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"],"names":["contactUs","refetchContactUs","t","useTranslation","useGetAllContactUsQuery","data","isSuccess","refetch","useUpdateContactUsMutation","updateContactUs","isLoading","dispatch","useDispatch","useState","show","setShow","handleClose","useSelector","state","partner","firstText","setFirstText","firstTextAr","setFirstTextAr","lastText","setLastText","lastTextAr","setLastTextAr","location","setLocation","locationAr","setLocationAr","branches","setBranches","branchesAr","setBranchesAr","address","setAddress","addressAr","setAddressAr","question","setQuestion","questionAr","setQuestionAr","companyEmail","setCompanyEmail","tel","setTel","fax","setFax","changeValue","e","target","value","editContactUs","first_text","last_text","first_text_ar","last_text_ar","location_ar","branches_ar","address_ar","question_ar","company_email","preventDefault","contact_us_id","_id","then","response","createContactUs","toast","position","error","message","useEffect","title","title_ar","head_office","work_inquiries","phone","CustomSpinner","md","className","onClick","createPartner","en","ar","icon","faEdit","size","Modal","onHide","backdrop","keyboard","closeButton","Form","onSubmit","Row","Col","FormGroup","FormLabel","FormControl","disabled","onChange","type","Button","useCreateContactUsMutation","makeNewContactUs","faCirclePlus","user","isAdmin","allContactUs","name","setName","email","setEmail","phoneOrWhatsApp","setPhoneOrWhatsApp","company","setCompany","country","setCountry","numberOfNetwork","setNumberOfNetwork","networkTraffic","setNetworkTraffic","networkType","setNetworkType","setMessage","useGetContactUsByIdQuery","useCreateClientMessageMutation","createMessage","uploadingMessage","phone_or_whatsapp","number_of_network","network_traffic","network_type","SendMessage","PageTitle","Container","required","as","row","placeholder"],"sourceRoot":""}