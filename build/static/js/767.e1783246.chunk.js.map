{"version":3,"file":"static/js/767.e1783246.chunk.js","mappings":"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","sources":["store/apis/ApplyJob/ApplyJob.js","pages/ApplyJob/ApplyJob.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport { APPURL } from '../../constants/constants';\r\n\r\nconst ApplyJobApi = createApi({\r\n  reducerPath: 'ApplyJob Api',\r\n  baseQuery: fetchBaseQuery({ baseUrl: `${APPURL}/apply_job` }),\r\n  endpoints: (builder) => ({\r\n    getAllApplyJob: builder.query({\r\n      query: () => '/',\r\n    }),\r\n    getApplyJobById: builder.query({\r\n      query: (apply_job_id) => `/${apply_job_id}`,\r\n    }),\r\n    createApplyJob: builder.mutation({\r\n      query: ({ ...data }) => ({\r\n        url: '/',\r\n        method: 'POST',\r\n        body: data,\r\n      }),\r\n    }),\r\n    updateApplyJob: builder.mutation({\r\n      query: ({ apply_job_id, ...data }) => ({\r\n        url: `/${apply_job_id}`,\r\n        method: 'PUT',\r\n        body: data,\r\n      }),\r\n    }),\r\n    deleteApplyJob: builder.mutation({\r\n      query: (apply_job_id) => ({\r\n        url: `/${apply_job_id}`,\r\n        method: 'DELETE',\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAllApplyJobQuery,\r\n  useGetApplyJobByIdQuery,\r\n  useCreateApplyJobMutation,\r\n  useUpdateApplyJobMutation,\r\n  useDeleteApplyJobMutation,\r\n} = ApplyJobApi;\r\n\r\nexport default ApplyJobApi;\r\n","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormGroup from 'react-bootstrap/FormGroup';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useCreateApplyJobMutation } from '../../store/apis/ApplyJob/ApplyJob';\r\nimport arrow from '../../images/title_arrow.svg';\r\nimport arrowAr from '../../images/title_arrow_ar.svg';\r\nimport './ApplyJob.css';\r\nimport { toast } from 'react-toastify';\r\nimport StyledButton from '../../common/StyledButton/StyledButton';\r\nimport PageTitle from '../../utils/PageTitle';\r\n\r\nconst ApplyJob = () => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const [createApplication, { isLoading }] = useCreateApplyJobMutation();\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const changeValue = (e) => e.target.value;\r\n\r\n  const uploadFile = () => {\r\n    const file = document.getElementById('uploadMessageOrCVFile').files[0];\r\n\r\n    if (file.size > 10485760) {\r\n      return toast.error(t('file_too_large_10mb'), {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener(\r\n      'load',\r\n      () => {\r\n        setMessage(reader.result);\r\n      },\r\n      false\r\n    );\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const data = {\r\n    name,\r\n    email,\r\n    phone: phone,\r\n    file: message,\r\n  };\r\n\r\n  const SendMessage = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      await createApplication({ ...data }).then((response) => {\r\n        if (response.data) {\r\n          toast.success(t('create_success'), {\r\n            position: 'top-center',\r\n          });\r\n          setName('');\r\n          setEmail('');\r\n          setPhone('');\r\n          setMessage('');\r\n        } else {\r\n          toast.error(response.error.data.message, {\r\n            position: 'top-center',\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      toast.error(error.message, {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className='apply_form'>\r\n      <PageTitle>Apply Job</PageTitle>\r\n      <div className='form_section'>\r\n        <div className='title'>\r\n          <div>\r\n            {' '}\r\n            {t('hpt_page.apply_job_page.title', {\r\n              en: 'Ready To',\r\n              ar: 'مستعد لــ',\r\n            })}\r\n          </div>\r\n          <div>\r\n            {' '}\r\n            {t('hpt_page.apply_job_page.title', {\r\n              en: 'Start Your',\r\n              ar: 'بدايـــــة',\r\n            })}\r\n          </div>\r\n          <div>\r\n            {' '}\r\n            {t('hpt_page.apply_job_page.title', {\r\n              en: 'Carrer At HTP',\r\n              ar: 'مسارك المهنى فى هاى بوينت تكنولوجى',\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className='sub_title'>\r\n          <div className='arrow_container'>\r\n            {' '}\r\n            {i18n.language === 'en' ? (\r\n              <img src={arrow} alt='ARROW_IMG' className='arrow_img' />\r\n            ) : (\r\n              <img src={arrowAr} alt='ARROW_IMG' className='arrow_img' />\r\n            )}\r\n          </div>{' '}\r\n          {t('hpt_page.apply_job_page.sub_title', {\r\n            en: 'We Offer A Lot Of Goodies For You To Enjoy Your Work',\r\n            ar: 'نحن نقدم لك الكثير من الأشياء الجيدة لتستمتع بعملك',\r\n          })}\r\n        </div>\r\n        <Form onSubmit={(e) => SendMessage(e)}>\r\n          <FormGroup>\r\n            <FormLabel className='apply_job__form-label'>\r\n              {t('hpt_page.apply_job_page.name')}\r\n            </FormLabel>\r\n            <FormControl\r\n              type='text'\r\n              value={name}\r\n              onChange={(e) => setName(changeValue(e))}\r\n              className='apply_job__form-control'\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup className='mb-3'>\r\n            <FormLabel className='apply_job__form-label'>\r\n              {t('hpt_page.apply_job_page.email')}\r\n            </FormLabel>\r\n            <FormControl\r\n              type='email'\r\n              value={email}\r\n              onChange={(e) => setEmail(changeValue(e))}\r\n              className='apply_job__form-control'\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup className='mb-3'>\r\n            <FormLabel className='apply_job__form-label'>\r\n              {t('hpt_page.apply_job_page.phone')}\r\n            </FormLabel>\r\n            <FormControl\r\n              type='number'\r\n              value={phone}\r\n              onChange={(e) => setPhone(changeValue(e))}\r\n              className='apply_job__form-control'\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </FormGroup>{' '}\r\n          <FormLabel className='apply_job__form-label'>\r\n            {t('hpt_page.apply_job_page.message')}\r\n          </FormLabel>\r\n          <div className='file_style'>\r\n            <FormGroup className='mb-3'>\r\n              <div className='order_text'>\r\n                {t('hpt_page.apply_job_page.attach_file')}\r\n              </div>\r\n              <div className='file_rule'>\r\n                {t('hpt_page.apply_job_page.file_rule')}\r\n              </div>\r\n              <FormControl\r\n                type='file'\r\n                id='uploadMessageOrCVFile'\r\n                onChange={uploadFile}\r\n                className='apply_job__form-control file_input'\r\n                required\r\n                disabled={isLoading}\r\n              />\r\n            </FormGroup>\r\n          </div>\r\n          <div className='apply_job__btn-container'>\r\n            <button type='submit' className='apply_job__submit-btn'>\r\n              {' '}\r\n              {i18n.language === 'en' ? (\r\n                <StyledButton\r\n                  color={'white'}\r\n                  borderColor={'white'}\r\n                  borderRightWidth={'.1em'}\r\n                  borderRightColor={'white'}\r\n                >\r\n                  {t('hpt_page.apply_job_page.send_message_btn')}\r\n                </StyledButton>\r\n              ) : (\r\n                <StyledButton\r\n                  color={'white'}\r\n                  borderColor={'white'}\r\n                  borderLeftWidth={'.1em'}\r\n                  borderLeftColor={'white'}\r\n                  iconDir='rtl'\r\n                >\r\n                  {t('hpt_page.apply_job_page.send_message_btn')}\r\n                </StyledButton>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ApplyJob;\r\n"],"names":["ApplyJobApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","APPURL","endpoints","builder","getAllApplyJob","query","getApplyJobById","apply_job_id","createApplyJob","mutation","url","method","body","updateApplyJob","data","deleteApplyJob","useCreateApplyJobMutation","useGetAllApplyJobQuery","useGetApplyJobByIdQuery","useUpdateApplyJobMutation","useDeleteApplyJobMutation","useTranslation","t","i18n","createApplication","isLoading","useState","name","setName","email","setEmail","phone","setPhone","message","setMessage","changeValue","e","target","value","file","SendMessage","preventDefault","then","response","toast","position","error","className","PageTitle","en","ar","language","src","arrow","alt","arrowAr","Form","onSubmit","FormGroup","FormLabel","FormControl","type","onChange","required","disabled","id","document","getElementById","files","size","reader","FileReader","addEventListener","result","readAsDataURL","StyledButton","color","borderColor","borderRightWidth","borderRightColor","borderLeftWidth","borderLeftColor","iconDir"],"sourceRoot":""}