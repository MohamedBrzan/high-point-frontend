{"version":3,"file":"static/js/892.3d6adeb6.chunk.js","mappings":"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","sources":["pages/Documentation/helpers/CreateDocumentationForm.js","pages/Documentation/helpers/EditDocumentationForm.js","pages/Documentation/helpers/Document/CreateDocumentForm.js","pages/Documentation/helpers/Document/EditDocumentForm.js","pages/Documentation/Documentation.js"],"sourcesContent":["import { faCirclePlus, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n  Modal,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { useCreateDocumentationMutation } from '../../../store/apis/Documentation/Documentation';\r\nimport CustomSpinner from '../../../utils/CustomSpinner/CustomSpinner';\r\n\r\nconst CreateDocumentationForm = ({ refetch }) => {\r\n  const { t } = useTranslation();\r\n  const [createDocumentation, { isLoading }] = useCreateDocumentationMutation();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [name, setName] = useState('');\r\n  const [nameAr, setNameAr] = useState('');\r\n\r\n  const [footerText, setFooterText] = useState('');\r\n  const [footerTextAr, setFooterTextAr] = useState('');\r\n\r\n  const [image, setImage] = useState('');\r\n\r\n  function uploadImage() {\r\n    const file = document.getElementById('documentationImage').files[0];\r\n\r\n    if (file.size > 15728640) {\r\n      return toast.error(t('file_too_large'), {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener(\r\n      'load',\r\n      () => {\r\n        setImage(reader.result);\r\n      },\r\n      false\r\n    );\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n  const changeValue = (e) => e.target.value;\r\n\r\n  const createDocumentationData = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const data = {\r\n        name,\r\n        name_ar: nameAr,\r\n        footer_text: footerText,\r\n        footer_text_ar: footerTextAr,\r\n        footer_image: image,\r\n      };\r\n\r\n      await createDocumentation({\r\n        ...data,\r\n      }).then((response) => {\r\n        if (response.data) {\r\n          toast.success(t('update_success'), {\r\n            position: 'top-center',\r\n          });\r\n\r\n          handleClose();\r\n          return refetch();\r\n        } else {\r\n          return toast.error(response.error.data.message, {\r\n            position: 'top-center',\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      return toast.error(error.message, {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <CustomSpinner />;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='create_btn'\r\n        onClick={handleShow}\r\n        title={t('hpt_page.card.title', {\r\n          en: 'Create Documentation',\r\n          ar: 'إنشاء توثيق جديد',\r\n        })}\r\n      >\r\n        <FontAwesomeIcon icon={faCirclePlus} size='3x' />\r\n      </div>\r\n\r\n      <Modal\r\n        show={show}\r\n        size='xl'\r\n        onHide={handleClose}\r\n        backdrop='static'\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {t('hpt_page.card.title', {\r\n              en: 'Create Documentation',\r\n              ar: 'إنشاء توثيق جديد',\r\n            })}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => createDocumentationData(e)}>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.name')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={name}\r\n                    onChange={(e) => setName(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.name')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={nameAr}\r\n                    onChange={(e) => setNameAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.footer_text')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={footerText}\r\n                    onChange={(e) => setFooterText(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.footer_text')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={footerTextAr}\r\n                    onChange={(e) => setFooterTextAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>{' '}\r\n            <FormGroup className='mb-3'>\r\n              <FormLabel className='head_label'>\r\n                {t('identifier_text_name.image')}\r\n              </FormLabel>\r\n              <FormControl\r\n                required\r\n                type='file'\r\n                id='documentationImage'\r\n                disabled={isLoading}\r\n                onChange={uploadImage}\r\n              />\r\n              <img\r\n                src={image}\r\n                alt='Documentation_Image'\r\n                className='w-100 mt-3'\r\n              />\r\n            </FormGroup>\r\n            <Button disabled={isLoading} type='submit'>\r\n              {t('create_btn')}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateDocumentationForm;\r\n","import { faCirclePlus, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n  Modal,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { useUpdateDocumentationMutation } from '../../../store/apis/Documentation/Documentation';\r\nimport CustomSpinner from '../../../utils/CustomSpinner/CustomSpinner';\r\n\r\nconst EditDocumentationForm = ({ documentation, refetchDocumentation }) => {\r\n  const { t } = useTranslation();\r\n  const [editDocumentation, { isLoading }] = useUpdateDocumentationMutation();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [name, setName] = useState('');\r\n  const [nameAr, setNameAr] = useState('');\r\n  const [footerText, setFooterText] = useState('');\r\n  const [footerTextAr, setFooterTextAr] = useState('');\r\n  const [footerImage, setFooterImage] = useState('');\r\n\r\n  const changeValue = (e) => e.target.value;\r\n\r\n  function changeFooterImage() {\r\n    const file = document.getElementById('editDocumentationFooterImage')\r\n      .files[0];\r\n\r\n    if (file.size > 5242880) {\r\n      return toast.error(t('file_too_large'), {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener(\r\n      'load',\r\n      () => {\r\n        setFooterImage(reader.result);\r\n      },\r\n      false\r\n    );\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  const editDocumentationData = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const data = {\r\n        name,\r\n        name_ar: nameAr,\r\n        footer_text: footerText,\r\n        footer_text_ar: footerTextAr,\r\n        footer_image: footerImage,\r\n      };\r\n\r\n      await editDocumentation({\r\n        documentation_id: documentation._id,\r\n        ...data,\r\n      }).then((response) => {\r\n        if (response.data) {\r\n          toast.success(t('update_success'), {\r\n            position: 'top-center',\r\n          });\r\n\r\n          handleClose();\r\n          return refetchDocumentation();\r\n        } else {\r\n          return toast.error(response.error.data.message, {\r\n            position: 'top-center',\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      return toast.error(error.message, {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setName(documentation.name);\r\n    setNameAr(documentation.name_ar);\r\n    setFooterImage(documentation.footer_image);\r\n    setFooterText(documentation.footer_text);\r\n    setFooterTextAr(documentation.footer_text_ar);\r\n  }, [\r\n    documentation.footer_image,\r\n    documentation.footer_text,\r\n    documentation.footer_text_ar,\r\n    documentation.name,\r\n    documentation.name_ar,\r\n  ]);\r\n\r\n  if (isLoading) return <CustomSpinner />;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='edit_btn'\r\n        onClick={handleShow}\r\n        title={t('hpt_page.card.title', {\r\n          en: 'Edit documentation',\r\n          ar: 'تعديل نبذه عنا',\r\n        })}\r\n      >\r\n        <FontAwesomeIcon icon={faEdit} size='2x' />\r\n      </div>\r\n\r\n      <Modal\r\n        show={show}\r\n        size='xl'\r\n        onHide={handleClose}\r\n        backdrop='static'\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {t('hpt_page.card.title', {\r\n              en: 'Edit documentation',\r\n              ar: 'تعديل نبذه عنا',\r\n            })}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => editDocumentationData(e)}>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.name')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={name}\r\n                    onChange={(e) => setName(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.name')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={nameAr}\r\n                    onChange={(e) => setNameAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.footer_text')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={footerText}\r\n                    onChange={(e) => setFooterText(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.footer_text')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={footerTextAr}\r\n                    onChange={(e) => setFooterTextAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <FormGroup className='mb-3'>\r\n              <FormLabel className='head_label'>\r\n                {t('identifier_text_name.image')}\r\n              </FormLabel>\r\n              <FormControl\r\n                disabled={isLoading}\r\n                type='file'\r\n                id='editDocumentationFooterImage'\r\n                onChange={changeFooterImage}\r\n              />\r\n\r\n              <img\r\n                src={footerImage}\r\n                alt='Footer_Image'\r\n                className='w-100 mt-3'\r\n              />\r\n            </FormGroup>\r\n            <Button disabled={isLoading} type='submit'>\r\n              {t('save_btn')}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditDocumentationForm;\r\n","import { faCirclePlus, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\n\r\nimport {\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n  Modal,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { useCreateDocumentMutation } from '../../../../store/apis/Documentation/Documentation';\r\nimport CustomSpinner from '../../../../utils/CustomSpinner/CustomSpinner';\r\n\r\nconst CreateDocumentForm = ({ documentation, refetchDocumentation }) => {\r\n  const { t } = useTranslation();\r\n  const [createDocument, { isLoading }] = useCreateDocumentMutation();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [tabTitle, setTabTitle] = useState('');\r\n  const [tabTitleAr, setTabTitleAr] = useState('');\r\n  const [descriptionTitle, setDescriptionTitle] = useState('');\r\n  const [descriptionTitleAr, setDescriptionTitleAr] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [descriptionAr, setDescriptionAr] = useState('');\r\n\r\n  const changeValue = (e) => e.target.value;\r\n\r\n  const createDocumentData = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const data = {\r\n        tab_title: tabTitle,\r\n        tab_title_ar: tabTitleAr,\r\n        desc_title: descriptionTitle,\r\n        desc_title_ar: descriptionTitleAr,\r\n        description,\r\n        description_ar: descriptionAr,\r\n      };\r\n\r\n      await createDocument({\r\n        documentation_id: documentation._id,\r\n        ...data,\r\n      }).then((response) => {\r\n        if (response.data) {\r\n          toast.success(t('create_success'), {\r\n            position: 'top-center',\r\n          });\r\n\r\n          handleClose();\r\n          return refetchDocumentation();\r\n        } else {\r\n          return toast.error(response.error.data.message, {\r\n            position: 'top-center',\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      return toast.error(error.message, {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <CustomSpinner />;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='create_btn'\r\n        onClick={handleShow}\r\n        title={t('hpt_page.card.title', {\r\n          en: 'Create Document',\r\n          ar: 'إنشاء توثيق جديد',\r\n        })}\r\n      >\r\n        <FontAwesomeIcon icon={faCirclePlus} size='3x' />\r\n      </div>\r\n\r\n      <Modal\r\n        show={show}\r\n        size='xl'\r\n        onHide={handleClose}\r\n        backdrop='static'\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {t('hpt_page.card.title', {\r\n              en: 'Create Document',\r\n              ar: 'إنشاء توثيق جديد',\r\n            })}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => createDocumentData(e)}>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.name')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={tabTitle}\r\n                    onChange={(e) => setTabTitle(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.name')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={tabTitleAr}\r\n                    onChange={(e) => setTabTitleAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.desc_title')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    as='textarea'\r\n                    rows='5'\r\n                    disabled={isLoading}\r\n                    value={descriptionTitle}\r\n                    onChange={(e) => setDescriptionTitle(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.desc_title')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    as='textarea'\r\n                    rows='5'\r\n                    disabled={isLoading}\r\n                    value={descriptionTitleAr}\r\n                    onChange={(e) => setDescriptionTitleAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.description')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    as='textarea'\r\n                    rows='5'\r\n                    disabled={isLoading}\r\n                    value={description}\r\n                    onChange={(e) => setDescription(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.description')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    as='textarea'\r\n                    rows='5'\r\n                    disabled={isLoading}\r\n                    value={descriptionAr}\r\n                    onChange={(e) => setDescriptionAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Button disabled={isLoading} type='submit'>\r\n              {t('create_btn')}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateDocumentForm;\r\n","import { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n  Modal,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport { useUpdateDocumentMutation } from '../../../../store/apis/Documentation/Documentation';\r\nimport CustomSpinner from '../../../../utils/CustomSpinner/CustomSpinner';\r\n\r\nconst EditDocumentForm = ({\r\n  documentation_id,\r\n  document,\r\n  refetchDocumentation,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [editDocument, { isLoading }] = useUpdateDocumentMutation();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [tabTitle, setTabTitle] = useState('');\r\n  const [tabTitleAr, setTabTitleAr] = useState('');\r\n  const [descriptionTitle, setDescriptionTitle] = useState('');\r\n  const [descriptionTitleAr, setDescriptionTitleAr] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [descriptionAr, setDescriptionAr] = useState('');\r\n\r\n  const changeValue = (e) => e.target.value;\r\n\r\n  const editDocumentData = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      const data = {\r\n        tab_title: tabTitle,\r\n        tab_title_ar: tabTitleAr,\r\n        desc_title: descriptionTitle,\r\n        desc_title_ar: descriptionTitleAr,\r\n        description,\r\n        description_ar: descriptionAr,\r\n      };\r\n\r\n      await editDocument({\r\n        documentation_id,\r\n        document_id: document._id,\r\n        ...data,\r\n      }).then((response) => {\r\n        if (response.data) {\r\n          toast.success(t('update_success'), {\r\n            position: 'top-center',\r\n          });\r\n\r\n          handleClose();\r\n          return refetchDocumentation();\r\n        } else {\r\n          return toast.error(response.error.data.message, {\r\n            position: 'top-center',\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      return toast.error(error.message, {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabTitle(document.tab_title);\r\n    setTabTitleAr(document.tab_title_ar);\r\n    setDescriptionTitle(document.desc_title);\r\n    setDescriptionTitleAr(document.desc_title_ar);\r\n    setDescription(document.description);\r\n    setDescriptionAr(document.description_ar);\r\n  }, [\r\n    document.desc_title,\r\n    document.desc_title_ar,\r\n    document.description,\r\n    document.description_ar,\r\n    document.tab_title,\r\n    document.tab_title_ar,\r\n  ]);\r\n\r\n  if (isLoading) return <CustomSpinner />;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='edit_btn'\r\n        onClick={handleShow}\r\n        title={t('hpt_page.card.title', {\r\n          en: 'Edit document',\r\n          ar: 'تعديل نبذه عنا',\r\n        })}\r\n      >\r\n        <FontAwesomeIcon icon={faEdit} size='1x' />\r\n      </div>\r\n\r\n      <Modal\r\n        show={show}\r\n        size='xl'\r\n        onHide={handleClose}\r\n        backdrop='static'\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {t('hpt_page.card.title', {\r\n              en: 'Edit document',\r\n              ar: 'تعديل نبذه عنا',\r\n            })}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => editDocumentData(e)}>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.title')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={tabTitle}\r\n                    onChange={(e) => setTabTitle(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.title')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    disabled={isLoading}\r\n                    value={tabTitleAr}\r\n                    onChange={(e) => setTabTitleAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.desc_title')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    as='textarea'\r\n                    rows='5'\r\n                    disabled={isLoading}\r\n                    value={descriptionTitle}\r\n                    onChange={(e) => setDescriptionTitle(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.desc_title')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    as='textarea'\r\n                    rows='5'\r\n                    disabled={isLoading}\r\n                    value={descriptionTitleAr}\r\n                    onChange={(e) => setDescriptionTitleAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.description')} ( EN )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    as='textarea'\r\n                    rows='5'\r\n                    disabled={isLoading}\r\n                    value={description}\r\n                    onChange={(e) => setDescription(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup className='mb-3'>\r\n                  <FormLabel className='head_label'>\r\n                    {t('identifier_text_name.description')} ( AR )\r\n                  </FormLabel>\r\n                  <FormControl\r\n                    required\r\n                    as='textarea'\r\n                    rows='5'\r\n                    disabled={isLoading}\r\n                    value={descriptionAr}\r\n                    onChange={(e) => setDescriptionAr(changeValue(e))}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Button disabled={isLoading} type='submit'>\r\n              {t('save_btn')}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditDocumentForm;\r\n","import React, { useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  useDeleteDocumentMutation,\r\n  useGetAllDocumentationQuery,\r\n  useGetDocumentationByIdQuery,\r\n} from '../../store/apis/Documentation/Documentation';\r\nimport CustomSpinner from '../../utils/CustomSpinner/CustomSpinner';\r\nimport './Documentation.css';\r\nimport LinesAnimation from '../../anim/LinesAnimation/LinesAnimation';\r\nimport StyledButton from '../../common/StyledButton/StyledButton';\r\nimport CreateDocumentationForm from './helpers/CreateDocumentationForm';\r\nimport EditDocumentationForm from './helpers/EditDocumentationForm';\r\nimport CreateDocumentForm from './helpers/Document/CreateDocumentForm';\r\nimport EditDocumentForm from './helpers/Document/EditDocumentForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport TextAnimation from '../../functions/TextAnimation';\r\nimport LetterAnimation from '../../functions/LetterAnimation';\r\nimport CleanAnimation from '../../functions/CleanAnimation';\r\nimport { useSelector } from 'react-redux';\r\n// import NuclearAnimation from '../../anim/NuclearAnimation/NuclearAnimation';\r\nimport RemoveForMoreThanId from '../../functions/RemoveForMoreThanId';\r\nimport { Link } from 'react-router-dom';\r\nimport PageTitle from '../../utils/PageTitle';\r\n\r\nconst Documentation = () => {\r\n  const { t } = useTranslation();\r\n  const { user } = useSelector((state) => state.user);\r\n  const isAdmin = user && user.isAdmin && user.isAdmin === true;\r\n\r\n  const {\r\n    data: allDocumentation,\r\n    isLoading,\r\n    refetch,\r\n  } = useGetAllDocumentationQuery();\r\n\r\n  const {\r\n    data: documentation,\r\n    isSuccess: documentIsSuccess,\r\n    isLoading: documentationIsLoading,\r\n    refetch: refetchDocumentation,\r\n  } = useGetDocumentationByIdQuery(\r\n    allDocumentation && allDocumentation[0] && allDocumentation[0]._id\r\n      ? allDocumentation[0]._id\r\n      : ''\r\n  );\r\n  const [deleteDocument, { isLoading: deleting }] = useDeleteDocumentMutation();\r\n\r\n  const changeTitles = (e) => {\r\n    const AllDocumentsTitles = document.querySelectorAll(\r\n      '.documentation .document_title'\r\n    );\r\n    const AllDocumentsDescriptions = document.querySelectorAll(\r\n      '.documentation .document_description'\r\n    );\r\n\r\n    AllDocumentsTitles.forEach((services_title) => {\r\n      services_title.classList.remove('active');\r\n      AllDocumentsDescriptions.forEach((documentation_document) => {\r\n        documentation_document.classList.remove('active');\r\n        if (\r\n          documentation_document.getAttribute('data-card') ===\r\n          e.target.getAttribute('data-title')\r\n        ) {\r\n          documentation_document.classList.add('active');\r\n        }\r\n      });\r\n    });\r\n\r\n    e.target.classList.add('active');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (documentIsSuccess) {\r\n      // const AllDocumentsTitles = document.querySelectorAll(\r\n      //   '.documentation .main_row .document_title'\r\n      // );\r\n      const AllDocumentsTitles = Array.from(\r\n        document.querySelectorAll('.documentation .main_row .document_title')\r\n      );\r\n\r\n      // const AllDocumentsDescriptions = document.querySelectorAll(\r\n      //   '.documentation .main_row .document_description'\r\n      // );\r\n\r\n      const AllDocumentsDescriptions = Array.from(\r\n        document.querySelectorAll(\r\n          '.documentation .main_row .document_description'\r\n        )\r\n      );\r\n\r\n      if (documentation) {\r\n        AllDocumentsTitles[0].classList.add('active');\r\n        AllDocumentsDescriptions[0].classList.add('active');\r\n      }\r\n\r\n      // if (AllDocumentsTitles && AllDocumentsDescriptions) {\r\n      //   AllDocumentsTitles.forEach((title, index) => {\r\n      //     if (index === 0) {\r\n      //       title.classList.add('active');\r\n      //     } else {\r\n      //       title.classList.remove('active');\r\n      //     }\r\n      //   });\r\n      //   AllDocumentsDescriptions.forEach((description, index) => {\r\n      //     if (index === 0) {\r\n      //       description.classList.add('active');\r\n      //     } else {\r\n      //       description.classList.remove('active');\r\n      //     }\r\n      //   });\r\n      // }\r\n      const footerText = document.querySelectorAll(\r\n        '.documentation .documentation_footer .documentation_footer_text .footer_text_word span.footer_span_text'\r\n      );\r\n\r\n      window.onscroll = () => {\r\n        if (footerText) {\r\n          if (window.scrollY >= 1000) {\r\n            LetterAnimation(footerText);\r\n          } else {\r\n            CleanAnimation(footerText);\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }, [documentIsSuccess, documentation]);\r\n\r\n  if (isLoading || deleting || documentationIsLoading) return <CustomSpinner />;\r\n\r\n  return (\r\n    <section className='documentation'>\r\n      {' '}\r\n      <PageTitle>Documentation</PageTitle>\r\n      <div className='section-head-image'></div>\r\n      {/* <div className='nuclear_canvas_container'>{NuclearAnimation()}</div> */}\r\n      {isAdmin ? (\r\n        documentation && documentation._id ? (\r\n          <>\r\n            {' '}\r\n            <EditDocumentationForm\r\n              documentation={documentation}\r\n              refetchDocumentation={refetchDocumentation}\r\n            />\r\n            <CreateDocumentForm\r\n              documentation={documentation}\r\n              refetchDocumentation={refetchDocumentation}\r\n            />\r\n          </>\r\n        ) : (\r\n          <CreateDocumentationForm refetch={refetch} />\r\n        )\r\n      ) : null}\r\n      <div className='head_title'>\r\n        {t('hpt_page.card.title', {\r\n          en: documentation?.name,\r\n          ar: documentation?.name_ar,\r\n        })}\r\n      </div>\r\n      <Row className='main_row'>\r\n        <Col xs={3}>\r\n          {documentation &&\r\n            documentation.document &&\r\n            documentation.document.map(\r\n              ({ _id, tab_title, tab_title_ar }, index) => (\r\n                <div\r\n                  key={index}\r\n                  className='document_title'\r\n                  data-title={_id}\r\n                  onClick={(e) => changeTitles(e)}\r\n                >\r\n                  {t('hpt_page.card.title', {\r\n                    en: tab_title,\r\n                    ar: tab_title_ar,\r\n                  })}\r\n                </div>\r\n              )\r\n            )}\r\n          <LinesAnimation />\r\n        </Col>\r\n        <Col xs={9}>\r\n          {documentation &&\r\n            documentation.document &&\r\n            documentation.document.map(\r\n              (\r\n                {\r\n                  _id,\r\n                  tab_title,\r\n                  tab_title_ar,\r\n                  desc_title,\r\n                  desc_title_ar,\r\n                  description,\r\n                  description_ar,\r\n                },\r\n                index\r\n              ) => (\r\n                <div\r\n                  key={index}\r\n                  className='document_description'\r\n                  data-card={_id}\r\n                >\r\n                  {isAdmin ? (\r\n                    <div className='actions'>\r\n                      <EditDocumentForm\r\n                        document={{\r\n                          _id,\r\n                          tab_title,\r\n                          tab_title_ar,\r\n                          desc_title,\r\n                          desc_title_ar,\r\n                          description,\r\n                          description_ar,\r\n                        }}\r\n                        documentation_id={documentation._id}\r\n                        refetchDocumentation={refetchDocumentation}\r\n                      />\r\n                      <div\r\n                        className='delete_btn'\r\n                        onClick={() => {\r\n                          const data = {\r\n                            documentation_id: documentation?._id,\r\n                            document_id: _id,\r\n                          };\r\n                          RemoveForMoreThanId(\r\n                            'document',\r\n                            deleteDocument,\r\n                            data,\r\n                            refetchDocumentation\r\n                          );\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrash} size='1x' />\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                  <div className='title'>\r\n                    {t('hpt_page.card.title', {\r\n                      en: desc_title,\r\n                      ar: desc_title_ar,\r\n                    })}\r\n                  </div>\r\n\r\n                  <div className='description'>\r\n                    {t('hpt_page.card.description', {\r\n                      en: description,\r\n                      ar: description_ar,\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )\r\n            )}\r\n        </Col>\r\n      </Row>{' '}\r\n      <section className='documentation_footer'>\r\n        <picture>\r\n          <img\r\n            src={\r\n              documentation &&\r\n              documentation.footer_image &&\r\n              documentation.footer_image\r\n            }\r\n            alt='documentation Footer Img.'\r\n            className='w-100'\r\n          />\r\n        </picture>\r\n        <Row className='documentation_footer_text'>\r\n          <LinesAnimation />\r\n          <Col md={8}>\r\n            {documentation && (\r\n              <div className='footer_text_word'>\r\n                <div>\r\n                  {TextAnimation(\r\n                    'hpt_page.about_page.title',\r\n                    'footer_span_text',\r\n                    documentation.footer_text,\r\n                    documentation.footer_text_ar,\r\n                    null\r\n                  )}\r\n                </div>\r\n                <div className='footer_btn'>\r\n                  <Link\r\n                    to='/about'\r\n                    className='text-decoration-none'\r\n                    onClick={() =>\r\n                      window.scrollTo({\r\n                        top: 0,\r\n                        behavior: 'smooth',\r\n                      })\r\n                    }\r\n                  >\r\n                    <StyledButton\r\n                      margin='0'\r\n                      color='white'\r\n                      borderColor='white'\r\n                      borderRightColor='white'\r\n                    >\r\n                      {t('hpt_page.about_page.title', {\r\n                        en: 'ABOUT HTP',\r\n                        ar: 'صفحة نبذه مختصره',\r\n                      })}\r\n                    </StyledButton>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Documentation;\r\n"],"names":["refetch","t","useTranslation","useCreateDocumentationMutation","createDocumentation","isLoading","useState","show","setShow","handleClose","name","setName","nameAr","setNameAr","footerText","setFooterText","footerTextAr","setFooterTextAr","image","setImage","changeValue","e","target","value","createDocumentationData","preventDefault","data","name_ar","footer_text","footer_text_ar","footer_image","then","response","toast","position","error","message","CustomSpinner","className","onClick","title","en","ar","icon","faCirclePlus","size","Modal","onHide","backdrop","keyboard","closeButton","Form","onSubmit","Row","Col","md","FormGroup","FormLabel","FormControl","required","disabled","onChange","type","id","file","document","getElementById","files","reader","FileReader","addEventListener","result","readAsDataURL","src","alt","Button","documentation","refetchDocumentation","useUpdateDocumentationMutation","editDocumentation","footerImage","setFooterImage","editDocumentationData","documentation_id","_id","useEffect","faEdit","useCreateDocumentMutation","createDocument","tabTitle","setTabTitle","tabTitleAr","setTabTitleAr","descriptionTitle","setDescriptionTitle","descriptionTitleAr","setDescriptionTitleAr","description","setDescription","descriptionAr","setDescriptionAr","createDocumentData","tab_title","tab_title_ar","desc_title","desc_title_ar","description_ar","as","rows","useUpdateDocumentMutation","editDocument","editDocumentData","document_id","user","useSelector","state","isAdmin","useGetAllDocumentationQuery","allDocumentation","useGetDocumentationByIdQuery","documentIsSuccess","isSuccess","documentationIsLoading","useDeleteDocumentMutation","deleteDocument","deleting","AllDocumentsTitles","Array","from","querySelectorAll","AllDocumentsDescriptions","classList","add","window","onscroll","scrollY","LetterAnimation","CleanAnimation","PageTitle","xs","map","index","forEach","services_title","remove","documentation_document","getAttribute","changeTitles","LinesAnimation","RemoveForMoreThanId","faTrash","TextAnimation","Link","to","scrollTo","top","behavior","StyledButton","margin","color","borderColor","borderRightColor"],"sourceRoot":""}