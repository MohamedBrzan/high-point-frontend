{"version":3,"file":"static/js/230.86817723.chunk.js","mappings":"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","sources":["pages/Authentication/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport authImage from '../../images/auth.png';\r\nimport logo from '../../images/auth_logo.svg';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormGroup from 'react-bootstrap/FormGroup';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './Authentication.css';\r\nimport { toast } from 'react-toastify';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useRegisterUserMutation } from '../../store/apis/User/User';\r\nimport customAvatar from '../../images/avatar.png';\r\nimport { createUser } from '../../store/reducers/User/UserSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport PageTitle from '../../utils/PageTitle';\r\n\r\nconst RegisterPage = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [avatar, setAvatar] = useState(customAvatar);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const [registerUser, { isLoading }] = useRegisterUserMutation();\r\n\r\n  const changeValue = (e) => e.target.value;\r\n\r\n  const uploadAvatar = () => {\r\n    const file = document.getElementById('uploadAvatarImage').files[0];\r\n    const preview = document.getElementById('avatarImagePreview');\r\n\r\n    const reader = new FileReader();\r\n\r\n    if (file.size > 5242880) {\r\n      return toast.error(t('file_too_large'), {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n\r\n    reader.addEventListener(\r\n      'load',\r\n      () => {\r\n        preview.src = reader.result;\r\n        setAvatar(reader.result);\r\n      },\r\n      false\r\n    );\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const register = async (e) => {\r\n    const data = {\r\n      avatar: avatar !== '' ? avatar : customAvatar,\r\n      name,\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n    };\r\n\r\n    e.preventDefault();\r\n    try {\r\n      await registerUser({ ...data }).then((response) => {\r\n        if (response.data) {\r\n          dispatch(createUser(response.data.user));\r\n          toast.success('User registered successfully', {\r\n            position: 'top-center',\r\n          });\r\n          navigate('/');\r\n        } else {\r\n          toast.error(response.error.data.message, {\r\n            position: 'top-center',\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      toast.error(error.message, {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className='authentication register'>\r\n      <PageTitle>Register</PageTitle>\r\n      <Row className='auth_content_row'>\r\n        <Col md={6} className='text_col'>\r\n          <div className='logo'>\r\n            <Link to='/'>\r\n              <img src={logo} alt='LOGO' className='auth_logo_img' />\r\n            </Link>\r\n          </div>\r\n          <div className='head_text'>\r\n            <div className='first_title'>\r\n              {t('authentication.register.first_title')}\r\n            </div>\r\n            <span className='colored_title'>\r\n              {t('authentication.register.colored_title')}\r\n            </span>\r\n            <span className='last_title'>\r\n              {t('authentication.register.last_title')}\r\n            </span>\r\n          </div>\r\n          <Container fluid={'sm'} className='mt-3'>\r\n            <Form onSubmit={(e) => register(e)}>\r\n              <FormGroup className='mb-4'>\r\n                <FormLabel>{t('authentication.form.avatar')}</FormLabel>\r\n                <div className='avatar_container'>\r\n                  <FormControl\r\n                    disabled={isLoading}\r\n                    type='file'\r\n                    name='avatar'\r\n                    id='uploadAvatarImage'\r\n                    onChange={uploadAvatar}\r\n                    placeholder={t('authentication.form.name.placeholder')}\r\n                  />\r\n                  <img src={avatar} alt='Avatar.' id='avatarImagePreview'></img>\r\n                </div>\r\n              </FormGroup>\r\n              <FormGroup className='mb-4'>\r\n                <FormLabel>{t('authentication.form.name.text')}</FormLabel>\r\n                <FormControl\r\n                  disabled={isLoading}\r\n                  required\r\n                  type='text'\r\n                  name='name'\r\n                  value={name}\r\n                  onChange={(e) => setName(changeValue(e))}\r\n                  placeholder={t('authentication.form.name.placeholder')}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-4'>\r\n                <FormLabel>{t('authentication.form.email.text')}</FormLabel>\r\n                <FormControl\r\n                  disabled={isLoading}\r\n                  required\r\n                  type='email'\r\n                  name='email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(changeValue(e))}\r\n                  placeholder={t('authentication.form.email.placeholder')}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-4'>\r\n                <FormLabel>{t('authentication.form.password.text')}</FormLabel>\r\n                <FormControl\r\n                  disabled={isLoading}\r\n                  required\r\n                  type='password'\r\n                  name='password'\r\n                  value={password}\r\n                  onChange={(e) => setPassword(changeValue(e))}\r\n                  placeholder={t('authentication.form.password.placeholder')}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-4'>\r\n                <FormLabel>\r\n                  {t('authentication.form.confirm_password.text')}\r\n                </FormLabel>\r\n                <FormControl\r\n                  disabled={isLoading}\r\n                  required\r\n                  type='password'\r\n                  name='password'\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(changeValue(e))}\r\n                  placeholder={t(\r\n                    'authentication.form.confirm_password.placeholder'\r\n                  )}\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                disabled={isLoading}\r\n                type='submit'\r\n                className='auth_submit_btn'\r\n              >\r\n                {t('authentication.form.register_btn')}\r\n              </Button>\r\n              <Link to='/authentication/login' className='have_account_link'>\r\n                {' '}\r\n                {t('authentication.have_account.register')}\r\n              </Link>\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n        <Col md={6} className='auth_img_col'>\r\n          <img src={authImage} alt='AUTH_IMAGE' className='auth_img' />\r\n        </Col>\r\n      </Row>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["t","useTranslation","navigate","useNavigate","dispatch","useDispatch","useState","customAvatar","avatar","setAvatar","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","useRegisterUserMutation","registerUser","isLoading","changeValue","e","target","value","register","data","preventDefault","then","response","createUser","user","toast","position","error","message","className","md","Link","to","src","logo","alt","fluid","onSubmit","disabled","type","id","onChange","file","document","getElementById","files","preview","reader","FileReader","size","addEventListener","result","readAsDataURL","placeholder","required","authImage"],"sourceRoot":""}