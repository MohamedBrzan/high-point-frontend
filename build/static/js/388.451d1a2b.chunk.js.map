{"version":3,"file":"static/js/388.451d1a2b.chunk.js","mappings":"+WA4HA,UA1GsB,WACpB,IAAQA,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,SAACC,GAAC,OAAKA,EAAEC,OAAOC,KAAM,EAE1C,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAA8CF,EAAAA,EAAAA,UAAS,IAAG,eAAnDG,EAAe,KAAEC,EAAkB,KAE1C,GAA2CC,EAAAA,EAAAA,MAA0B,eAA9DC,EAAiB,KAAIC,EAAS,KAATA,UAEpBC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAY,yCAAG,WAAOb,GAAC,4EAON,OAPM,SAEnBc,EAAO,CACXV,SAAAA,EACAE,gBAAAA,EACAS,QAASJ,GAEXX,EAAEgB,iBAAiB,SACbP,GAAkB,UAAKK,IAAQG,MAAK,SAACC,GACrCA,EAASJ,MACXjB,GAASsB,EAAAA,EAAAA,GAAWD,EAASJ,KAAKM,OAClCC,EAAAA,GAAAA,QAAc5B,EAAE,8CAA+C,CAC7D6B,SAAU,eAEZ3B,EAAS,MAET0B,EAAAA,GAAAA,MAAYH,EAASK,MAAMT,KAAKU,QAAS,CACvCF,SAAU,cAGhB,IAAG,KAAD,kDAEFD,EAAAA,GAAAA,MAAY,KAAMG,QAAS,CACzBF,SAAU,eACT,yDAEN,gBA1BiB,sCA4BlB,OACE,qBAASG,UAAU,gCAA+B,WAChD,SAAC,IAAS,8BACV,UAAC,IAAG,CAACA,UAAU,mBAAkB,WAC/B,UAAC,IAAG,CAACC,GAAI,EAAGD,UAAU,WAAU,WAC9B,gBAAKA,UAAU,OAAM,UACnB,SAAC,EAAAE,KAAI,CAACC,GAAG,IAAG,UACV,gBAAKC,IAAKC,EAAAA,EAAMC,IAAI,OAAON,UAAU,uBAGzC,gBAAKA,UAAU,YAAW,UACxB,gBAAKA,UAAU,cAAa,SACzBhC,EAAE,gDAGP,SAAC,IAAS,CAACuC,MAAO,KAAMP,UAAU,OAAM,UACtC,UAAC,IAAI,CAACQ,SAAU,SAACjC,GAAC,OAAKa,EAAab,EAAE,EAAC,WACrC,UAAC,IAAS,CAACyB,UAAU,OAAM,WACzB,SAAC,IAAS,UAAEhC,EAAE,wCACd,SAAC,IAAW,CACVyC,SAAUxB,EACVyB,UAAQ,EACRC,KAAK,WACLC,KAAK,WACLnC,MAAOE,EACPkC,SAAU,SAACtC,GAAC,OAAKK,EAAYN,EAAYC,GAAG,EAC5CuC,YAAa9C,EAAE,kDAGnB,UAAC,IAAS,CAACgC,UAAU,OAAM,WACzB,SAAC,IAAS,UACPhC,EAAE,gDAEL,SAAC,IAAW,CACVyC,SAAUxB,EACVyB,UAAQ,EACRC,KAAK,WACLC,KAAK,WACLnC,MAAOI,EACPgC,SAAU,SAACtC,GAAC,OAAKO,EAAmBR,EAAYC,GAAG,EACnDuC,YAAa9C,EACX,0DAKN,SAAC,IAAM,CACLyC,SAAUxB,EACV0B,KAAK,SACLX,UAAU,kBAAiB,SAE1BhC,EAAE,sDAKX,SAAC,IAAG,CAACiC,GAAI,EAAGD,UAAU,eAAc,UAClC,gBAAKI,IAAKW,EAAWT,IAAI,aAAaN,UAAU,oBAK1D,C","sources":["pages/Authentication/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport authImage from '../../images/auth.png';\r\nimport logo from '../../images/auth_logo.svg';\r\nimport { createUser } from '../../store/reducers/User/UserSlice';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport './Authentication.css';\r\nimport { Col, Container, FormGroup, FormLabel, Row } from 'react-bootstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useResetPasswordMutation } from '../../store/apis/User/User';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PageTitle from '../../utils/PageTitle';\r\n\r\nconst ResetPassword = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const changeValue = (e) => e.target.value;\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const [resetUserPassword, { isLoading }] = useResetPasswordMutation();\r\n\r\n  const { id } = useParams();\r\n\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      const data = {\r\n        password,\r\n        confirmPassword,\r\n        user_id: id,\r\n      };\r\n      e.preventDefault();\r\n      await resetUserPassword({ ...data }).then((response) => {\r\n        if (response.data) {\r\n          dispatch(createUser(response.data.user));\r\n          toast.success(t('authentication.form.reset_password.message'), {\r\n            position: 'top-center',\r\n          });\r\n          navigate('/');\r\n        } else {\r\n          toast.error(response.error.data.message, {\r\n            position: 'top-center',\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      toast.error(error.message, {\r\n        position: 'top-center',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className='authentication reset_password'>\r\n      <PageTitle>Reset Password</PageTitle>\r\n      <Row className='auth_content_row'>\r\n        <Col md={6} className='text_col'>\r\n          <div className='logo'>\r\n            <Link to='/'>\r\n              <img src={logo} alt='LOGO' className='auth_logo_img' />\r\n            </Link>\r\n          </div>\r\n          <div className='head_text'>\r\n            <div className='login_title'>\r\n              {t('authentication.form.reset_password.text')}\r\n            </div>\r\n          </div>\r\n          <Container fluid={'sm'} className='mt-3'>\r\n            <Form onSubmit={(e) => handleSubmit(e)}>\r\n              <FormGroup className='mb-4'>\r\n                <FormLabel>{t('authentication.form.password.text')}</FormLabel>\r\n                <FormControl\r\n                  disabled={isLoading}\r\n                  required\r\n                  type='password'\r\n                  name='password'\r\n                  value={password}\r\n                  onChange={(e) => setPassword(changeValue(e))}\r\n                  placeholder={t('authentication.form.password.placeholder')}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className='mb-4'>\r\n                <FormLabel>\r\n                  {t('authentication.form.confirm_password.text')}\r\n                </FormLabel>\r\n                <FormControl\r\n                  disabled={isLoading}\r\n                  required\r\n                  type='password'\r\n                  name='password'\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(changeValue(e))}\r\n                  placeholder={t(\r\n                    'authentication.form.confirm_password.placeholder'\r\n                  )}\r\n                />\r\n              </FormGroup>\r\n\r\n              <Button\r\n                disabled={isLoading}\r\n                type='submit'\r\n                className='auth_submit_btn'\r\n              >\r\n                {t('authentication.form.reset_password.text')}\r\n              </Button>\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n        <Col md={6} className='auth_img_col'>\r\n          <img src={authImage} alt='AUTH_IMAGE' className='auth_img' />\r\n        </Col>\r\n      </Row>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"names":["t","useTranslation","navigate","useNavigate","dispatch","useDispatch","changeValue","e","target","value","useState","password","setPassword","confirmPassword","setConfirmPassword","useResetPasswordMutation","resetUserPassword","isLoading","id","useParams","handleSubmit","data","user_id","preventDefault","then","response","createUser","user","toast","position","error","message","className","md","Link","to","src","logo","alt","fluid","onSubmit","disabled","required","type","name","onChange","placeholder","authImage"],"sourceRoot":""}